{
  "name": "node-xmpp",
  "main": "./lib/node-xmpp",
  "version": "1.0.0-alpha2",
  "browserify": "./lib/node-xmpp-browserify",
  "description": "Idiomatic XMPP client, component & server library for node.js + browserify",
  "author": {
    "name": "Astro"
  },
  "dependencies": {
    "node-expat": ">=1.4.1",
    "ltx": "0.x",
    "request": ">= 2.9.153",
    "browser-request": ">= 0.2.0",
    "faye-websocket": ">= 0.4.1",
    "browserify": "~3.19.1",
    "brfs": "0.0.8",
    "node-xmpp-component": "git+https://github.com/node-xmpp/node-xmpp-component.git",
    "node-xmpp-client": "git+https://github.com/node-xmpp/node-xmpp-client.git",
    "node-xmpp-server": "git+https://github.com/node-xmpp/node-xmpp-server.git",
    "node-xmpp-core": "git+https://github.com/node-xmpp/node-xmpp-core.git"
  },
  "devDependencies": {
    "mocha": ">=1.0.0",
    "pem": "https://github.com/dodo/pem/tarball/altNames",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-mocha-cli": "~1.3.0",
    "grunt-browserify": "~1.3.0",
    "should": "~3.1.0"
  },
  "browser": {
    "request": "browser-request",
    "node-stringprep": false,
    "faye-websocket": false,
    "./srv": false,
    "dns": false
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/node-xmpp/node-xmpp.git"
  },
  "homepage": "http://github.com/node-xmpp/node-xmpp",
  "bugs": {
    "url": "http://github.com/node-xmpp/node-xmpp/issues"
  },
  "maintainers": [
    {
      "name": "Astro",
      "email": "astro@spaceboyz.net",
      "url": "http://spaceboyz.net/~astro/"
    },
    {
      "name": "Lloyd Watkin",
      "email": "lloyd@evilprofessor.co.uk",
      "url": "http://www.evilprofessor.co.uk"
    }
  ],
  "contributors": [
    {
      "name": "Stephan Maka"
    },
    {
      "name": "Derek Hammer"
    },
    {
      "name": "Daniel Zelisko"
    },
    {
      "name": "Michael Geers"
    },
    {
      "name": "Nolan Darilek"
    },
    {
      "name": "Nathan Rajlich"
    },
    {
      "name": "Dhruv Matani"
    },
    {
      "name": "Camilo Aguilar"
    },
    {
      "name": "Henry Chan"
    },
    {
      "name": "Justin Campbell"
    },
    {
      "name": "Trent Mick"
    },
    {
      "name": "Alexey Shamrin"
    },
    {
      "name": "Sonny Piers"
    },
    {
      "name": "Chaitanya Gupta"
    },
    {
      "name": "Иван"
    },
    {
      "name": "Julien Genestoux"
    },
    {
      "name": "Ian Langworth"
    },
    {
      "name": "Eelco Cramer"
    },
    {
      "name": "dodo"
    },
    {
      "name": "Markus Kohlhase"
    }
  ],
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "engine": "node >=0.8.0",
  "scripts": {
    "test": "grunt test",
    "browserify": "browserify -d -o node-xmpp-browser.js -r request:browser-request -i node-stringprep -i faye-websocket -i ./srv -i dns ./lib/node-xmpp-browserify.js"
  },
  "readme": "# node-xmpp\n\nidiomatic XMPP library for [node.js](http://nodejs.org/)\n\nNow usable in browsers too thanks to [Browserify](https://github.com/substack/node-browserify).\n\n[![build status](https://secure.travis-ci.org/node-xmpp/node-xmpp.png)](http://travis-ci.org/node-xmpp/node-xmpp)\n\n## Sub-modules\n\nWe've split `node-xmpp` into a set of submodules, realistically its now one of these that you'll want to use rather than `node-xmpp` itself. This project remains so existing users can continue to use the project, and as a location for integration tests. New users should make use of the sub-modules.\n\n[![build status](https://secure.travis-ci.org/node-xmpp/node-xmpp-server.png)](http://travis-ci.org/node-xmpp/node-xmpp-server) [node-xmpp-server](https://github.com/node-xmpp/node-xmpp-server.git)\n\n[![build status](https://secure.travis-ci.org/node-xmpp/node-xmpp-client.png)](http://travis-ci.org/node-xmpp/node-xmpp-client) [node-xmpp-client](https://github.com/node-xmpp/node-xmpp-client.git)\n\n[![build status](https://secure.travis-ci.org/node-xmpp/node-xmpp-component.png)](http://travis-ci.org/node-xmpp/node-xmpp-component) [node-xmpp-component](https://github.com/node-xmpp/node-xmpp-component.git)\n\n[![build status](https://secure.travis-ci.org/node-xmpp/node-xmpp-core.png)](http://travis-ci.org/node-xmpp/node-xmpp-core) [node-xmpp-core](https://github.com/node-xmpp/node-xmpp-core.git)\n\n## Installation\n\n__Note:__ We now only support nodejs versions 0.8.0 and greater.\n\nWith package manager [npm](http://npmjs.org/):\n\n    npm install node-xmpp\n\n### Testing\n\nInstall the dev dependencies, then...\n\n```npm test```\n\nTo run the tests and the code style checks then use:\n\n```grunt test```\n\nAlso see the tests run in [travis](http://travis-ci.org/astro/node-xmpp). The tests in travis run both the code and code style tests.\n\n## How to use\n\nPlease see the various [examples](https://github.com/astro/node-xmpp/tree/master/examples).\n\n## Objectives of *node-xmpp:*\n\n* Use node.js conventions, especially `EventEmitter`, ie. for write\n  buffer control\n* Fast parsing, `node-expat` was written for this library\n* Client support for both XMPP clients and components\n* Optional server infrastructure with `Router`\n* After authentication, leave trivial protocol bits to the user, that\n  is XML handling according to any\n  [XEP](http://xmpp.org/xmpp-protocols/xmpp-extensions/)\n\n\n## Features\n\n* Client authentication with SASL DIGEST-MD5, PLAIN, ANONYMOUS, X-FACEBOOK-PLATFORM\n* `_xmpp-client._tcp` SRV record support\n* Simple JID parsing with Stringprep normalization\n  * Optional now, you won't need ICU for just node-xmpp\n  * Please be aware if you identify users by JIDs\n  * `npm install node-stringprep`\n* Uses [ltx](http://github.com/astro/ltx)\n  * Much easier to handle than a standard DOM\n  * xmlns-aware\n  * Easy XML builder like Strophe.js (see down)\n  * Non-buffering serialization\n  * Was split out of node-xmpp for modularization and resuability\n* [Component](http://xmpp.org/extensions/xep-0114.html) connections\n* Run your own server/talk to other servers with `xmpp.Router`\n* Even runs in the Browser.\n\n\n## Dependencies\n\n* [node-expat](http://github.com/astro/node-expat) (requires libexpat!)\n* [ltx](http://github.com/astro/ltx)\n\nOptional\n\n* [node-stringprep](http://github.com/astro/node-stringprep): for [icu](http://icu-project.org/)-based string normalization.\n\n\n## Built with node-xmpp\n\n* [Sockethub](http://sockethub.org) by using [node-simple-xmpp](https://github.com/arunoda/node-simple-xmpp/)\n* [hubot-xmpp](https://github.com/markstory/hubot-xmpp/)\n* [superfeedr-node](https://github.com/superfeedr/superfeedr-node)\n* [xmpp-ftw](https://xmpp-ftw.jit.su)\n* [xmpp-smtp-gw](https://github.com/chris-rock/xmpp-smtp-gw)\n\n## Related Libraries\n\n* [node-xmpp-bosh](http://code.google.com/p/node-xmpp-bosh/): BOSH & websocket server (connection manager)\n* [node-xmpp-via-bosh](https://github.com/anoopc/node-xmpp-via-bosh/): BOSH client connections from node.js\n* [node-simple-xmpp](https://github.com/arunoda/node-simple-xmpp/): Simpler high-level client layer\n* [xmpp-server](https://github.com/superfeedr/xmpp-server/): Reusable XMPP server on top of node-xmpp\n* [node-xmpp-joap](https://github.com/flosse/node-xmpp-joap/): Jabber Object Access Protocol (XEP-0075) library for node-xmpp\n* [node-xmpp-serviceadmin](https://github.com/flosse/node-xmpp-serviceadmin/): Service Administration (XEP-0133) library for node-xmpp\n* [Junction](https://github.com/jaredhanson/junction): An extensible XMPP middleware layer\n* [xmpp-ftw](https://github.com/lloydwatkin/xmpp-ftw): XMPP For The Web ::: Powerful XMPP, simple JSON\n* [Lightstream](https://github.com/dodo/Lightstream): XMPP Framework\n\n## Design\n\nInheritance tree and associations:\n\n    ┌────────────┐1     1┌────────────┐\n    │ net.Stream ├───────┤ Connection │\n    └────────────┘       └────────────┘\n                               ↑\n          ┌────────────┬───────┴───┬────────────┐\n          │            │           │            │\n    ┏━━━━━┷━━━━┓ ┏━━━━━┷━━━━━┓ ┌───┴────┐ ┌─────┴─────┐\n    ┃  Client  ┃ ┃ Component ┃ │ Server │ │ C2SStream │\n    ┗━━━━━━━━━━┛ ┗━━━━━━━━━━━┛ └────────┘ └───────────┘\n                                   ↑            ↑0..*\n             ┌─────────────────────┤            │accepts\n             │                     │            │1\n    ┌────────┴───────┐ ┌───────────┴────┐ ┏━━━━━┷━━━━━┓\n    │ OutgoingServer │ │ IncomingServer │ ┃ C2SServer ┃\n    └─────────────┬──┘ └───┬────────────┘ ┗━━━━━┯━━━━━┛\n             0..* │        │ 0..*               │\n          creates │        │ accepts            │\n                 ┏┷━━━━━━━━┷┓                   │\n                 ┃  Router  ┃←──────────────────┘\n                 ┗━━━━━━━━━━┛ 1\n\n\nThis foundation is complemented by two basic data structures:\n\n* *JID:* a Jabber-Id, represented as a triple of `user`, `domain`,\n   `resource`\n* *Element:* any XML Element\n\n\n### Building XML Elements\n\nStrophe.js' XML Builder is very convenient for producing XMPP\nstanzas. ltx includes it in a much more primitive way: the\n`c()`, `cnode()` and `t()` methods can be called on any *Element*\nobject, returning the new child element.\n\nThis can be confusing: in the end, you will hold the last-added child\nuntil you use `up()`, a getter for the parent. `Connection.send()`\nfirst invokes `tree()` to retrieve the uppermost parent, the XMPP\nstanza, before sending it out the wire.\n\n## Browser Support\n\nnode-xmpp now comes with a prebuilt browser bundle:\n\n```html\n<script src=\"/node_modules/node-xmpp/node-xmpp-browser.js\"></script>\n<script type=\"text/javascript\">\n    var client = new XMPP.Client(opts);\n</script>\n```\n\n# Keepalives\n\nRather than send empty packets in order to keep any socket alive please try the following:\n\n```\nthis.client.connection.socket.setTimeout(0)\nthis.client.connection.socket.setKeepAlive(true, 10000)\n```\n\nWhere `this.client` is the result of `new require('node-xmpp').Client()`.\n\n## Development Roadmap\n\nFor the next releases, we will focus on stability and security of `node-xmpp`. Pull requests are welcome to position `node-xmpp` as the best, most secure and most stable xmpp library for nodejs.\n\n`node-xmpp-core`:\n\n * manifesto: support the STARTTLS method in XMPP as specified in RFC 6120, including mandatory-to-implement cipher suites and certificate validation consistent with RFC 6125\n * manifesto: prefer the latest version of TLS (TLS 1.2) #192\n * manifesto: disable support for the older and less secure SSL standard (SSLv2 and SSLv3)\n * manifesto: provide configuration options to require channel encryption for client-to-server and server-to-server connections\n * manifesto: provide configuration options to prefer or require cipher  suites that enable forward secrecy\n * Events harmonization\n * Common pause/resume/... for any Client/Component/Server session\n * Smoothen reconnect\n * Properly disconnect on stream errors, not on connection errors\n * more tests to verify against [RFC3920](http://xmpp.org/rfcs/rfc3920.html)\n\n`node-xmpp-client`:\n\n * Lookup BOSH URLs in DNS TXT records\n * Move connecting to connection, use WS/BOSH as TCP fallback\n * Ensure tls end/close/drain events\n * Possible may to use `strophe` plugins with `node-xmpp`, see [dodo/Lightstream](https://github.com/dodo/Lightstream)\n * more tests to verify against [RFC3921](http://xmpp.org/rfcs/rfc3921.html)\n * more demo apps to spead the usage\n * develop high-level client-api as seperate project to use json as input and output, see inspiration [xmpp-ftw/xmpp-ftw](https://github.com/xmpp-ftw/xmpp-ftw)\n * work on early DNSSEC implementation, see [XMPP-DNA](http://tools.ietf.org/html/draft-saintandre-xmpp-dna-01) and [DNSSEC](http://tools.ietf.org/html/draft-miller-xmpp-dnssec-prooftype-04)\n\n`node-xmpp-server`:\n\n * simple Websockets server (at least for testing the client)\n * Tests for S2S connections\n * maifesto: prefer authenticated encryption\n * harmonize c2s, bosh and websocket server components\n\n\n# Documentation\n\n(Builing up documentation slowly)\n\n## C2S Client to Server \n\n```\nvar client = new xmpp.Client({\n    jid: 'user@example.com',\n    password: 'password'\n})\n\nclient.on('connection', function() {\n    console.log('online')\n})\n\nclient.on('stanza', function(stanza) {\n    console.log('Incoming stanza: ', stanza.toString())\n})\n```\n\n### Closing a connection\n\n```\nclient.end()\n```\n",
  "readmeFilename": "README.markdown",
  "_id": "node-xmpp@1.0.0-alpha2",
  "_from": "node-xmpp@~1.0.0-alpha2"
}
